AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowMethods: "'POST,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"


Parameters:
  CognitoAuthorizerArn:
    Type: String
    Description: Reference to Cognito UserPool for the stage
  CustomDomain:
    Type: String
    Description: Custom API to connect this lambda to
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain

Resources:
  NvaDoiFunctionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        openapi: 3.0.0
        info:
          title: 'NVA DOI proxy'
          version: '1.0'
        paths:
          /:
            post:
              summary: Request data for DOI URL
              security:
                - CognitoUserPool: []
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DoiLookup'
                    example:
                      doiUrl: 'https://doi.org/10.1109/5.771073'
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaDoiFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
              responses:
                '200':
                  description: OK
                  content:
                    application/vnd.citationstyles.csl+json:
                      schema: {}
                    application/vnd.datacite.datacite+json:
                      schema: {}
                    applicationvnd.datacite.datacite+xmls:
                      schema: {}
        components:
          securitySchemes:
            CognitoUserPool:
              type: apiKey
              name: Authorization
              in: header
              x-amazon-apigateway-authtype: cognito_user_pools,
              x-amazon-apigateway-authorizer:
                type: cognito_user_pools
                providerARNs:
                  - !Ref CognitoAuthorizerArn
          schemas:
            DoiLookup:
              title: Lookup DOI URL
              type: object
              properties:
                doiURL:
                  type: string
                  description: DOI URL
              required:
                - doiUrl
  NvaDoiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: no.unit.nva.doi.FetchDoiMetadata::handleRequest
      Runtime: java8
      MemorySize: 512
      Environment:
        Variables:
          AllowOrigin: '*'
      Events:
        NvaDoi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref NvaDoiFunctionApi

  NvaDoiFunctionBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref CustomDomainBasePath
      DomainName: !Ref CustomDomain
      RestApiId: !Ref NvaDoiFunctionApi
      Stage: !Ref NvaDoiFunctionApi.Stage

