AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowCredentials: true
      AllowOrigin: !Sub
        - "'${Domain}'"
        - Domain: !Ref  CorsOrigin
      AllowMethods: "'OPTIONS, GET, PUT'"
      AllowHeaders: !Ref CorsAllowHeaders


Parameters:
  CognitoAuthorizerArn:
    Type: String
    Description: Reference to Cognito UserPool for the stage
  CustomDomain:
    Type: String
    Description: Custom API to connect this lambda to
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
  CorsOrigin:
    Type: String
    Description: Value to use for Cors 'Allow...' header if value is set
    Default: '{{resolve:secretsmanager:DefaultCorsOrigin:SecretString}}'
  CorsAllowHeaders:
    Type: String
    Description: String of headers to allow.
    Default: '{{resolve:ssm:defaultCorsAllowHeaders:1}}'

Resources:

  NvaDoiFunctionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref CognitoAuthorizerArn
      EndpointConfiguration: Regional

  NvaDoiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: no.unit.nva.doi.FetchDoiMetadata::handleRequest
      Runtime: java8
      MemorySize: 512
      Environment:
        Variables:
          AllowOrigin: !Ref  CorsOrigin
      Events:
        NvaDoi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Auth:
              Authorizer: MyCognitoAuthorizer
            Path: /
            Method: get
            RestApiId: !Ref NvaDoiFunctionApi
            RequestParameters:
            - method.request.querystring.url

  NvaDoiFunctionBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref CustomDomainBasePath
      DomainName: !Ref CustomDomain
      RestApiId: !Ref NvaDoiFunctionApi
      Stage: !Ref NvaDoiFunctionApi.Stage

